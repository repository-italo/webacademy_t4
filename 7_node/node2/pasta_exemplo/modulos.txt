   Os programas Javascript começam muito pequenos - a maior parte
de seu uso nos primeiros dias era para executar tarefas isoladas
aqui e ali de script, fornecendo um pouco de interatividade às 
suas páginas da Web sempre que necessário, de modo que scripts
grandes geralmente não eram necessários. Com o avanço rápido
da tecnologia para termos aplicativos completos sendo executados
em navegadores com muito JavaScript, além de JavaScript ser usado
em outros contextos (Node.js, por exemplo).

  Portanto, fez sentido nos últimos anos começar a pensar em fornecer
mecanismos para dividir programas JavaScript em módulos separados que
podem ser importados quando necessário. O Node.js possui essa capacidade
há muito tempo e existem várias bibliotecas e estruturas JavaScript que 
permitem o uso do módulo exemplo, (outros CommonJS e AMD-sistemas de módulos
baseados em RequireJS, e mais recentemente Webpack e Babel).

   A boa notícia é que os navegadores modernos começaram a dar suporte nativamente
à funcionalidade do módulo, e é sobre isso que este artigo trata. Isso só pode 
ser uma coisa boa - os navegadores podem otimizar o carregamento de módulos, 
tornando-o mais eficiente do que ter que usar uma biblioteca e fazer todo esse
processamento extra no lado do cliente e viagens de ida e volta extras.

Fonte: https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Guide/Modules
Acessado em: 11/09/2024